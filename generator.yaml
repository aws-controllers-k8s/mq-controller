ignore:
  resource_names:
    - Configuration
    - User
  field_paths:
    - CreateBrokerInput.DataReplicationPrimaryBrokerArn
    - CreateBrokerInput.DataReplicationMode
    - User.ReplicationUser
resources:
  Broker:
    hooks:
      sdk_update_pre_build_request:
        template_path: hooks/sdk_update_pre_build_request.go.tpl
      sdk_delete_pre_build_request:
        template_path: hooks/sdk_delete_pre_build_request.go.tpl
      sdk_read_one_post_set_output:
        template_path: hooks/sdk_read_one_post_set_output.go.tpl
      sdk_update_pre_set_output:
        template_path: hooks/sdk_update_pre_set_output.go.tpl
      delta_pre_compare:
        template_path: hooks/delta_pre_compare.go.tpl
    renames:
      operations:
        CreateBroker:
          input_fields:
            BrokerName: Name

    update_operation:
      omit_unchanged_fields: true
      # UpdateBroker API returns nil for values not set in the request.
      only_set_unchanged_fields: true
    fields:
      SecurityGroups:
        late_initialize: {}
        references:
          service_name: ec2
          resource: SecurityGroup
          path: Status.ID
      SubnetIDs:
        late_initialize: {}
        references:
          service_name: ec2
          resource: Subnet
          path: Status.SubnetID
      BrokerState:
        from:
          operation: DescribeBroker
          path: BrokerState
        is_read_only: true
      BrokerInstances:
        from:
          operation: DescribeBroker
          path: BrokerInstances
        is_read_only: true
      Users:
        compare:
          # NOTE(jaypipes): For RabbitMQ brokers, the Users field returned by
          # DescribeBroker is *always* an empty slice because the only settable
          # user information at the moment is for the single admin user. So, as
          # a workaround for right now to prevent update calls from being made
          # unnecessarily, we ignore Users for the purposes of comparing
          # resources.
          is_ignored: true
      Users.Password:
        is_secret: true
      AuthenticationStrategy:
        late_initialize: {}
      AutoMinorVersionUpgrade:
        late_initialize: {}
      EngineVersion:
        late_initialize: {}
        set:
          - method: Update
            ignore: true
      MaintenanceWindowStartTime:
        late_initialize: {}
      EncryptionOptions:
        late_initialize: {}
      StorageType:
        late_initialize: {}
      PubliclyAccessible:
        late_initialize: {}
      Logs:
        late_initialize: {}
      LDAPServerMetadata:
        late_initialize: {
          # LDAP Server Metadata is only available for ActiveMQ brokers
          skip_incomplete_check: {}
        }